<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd">
	<context:component-scan base-package="com.office.service" />
	<bean class="org.springframework.beans.factory.config.PreferencesPlaceholderConfigurer" >
		<property name="locations">
        <list>
		<value>classpath:spring/dbconfig.properties</value>
		</list>
		</property>
	</bean>
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		destroy-method="close">
		<property name="url" value="${url}" />
		<property name="username" value="${username}" />
		<property name="password" value="${password}" />
		<property name="driverClassName" value="${driverClassName}" />
	</bean>
	
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="mapperLocations" value="classpath:com/office/dao/*Mapper.xml"></property>
		<property name="typeAliasesPackage" value="com.office.entity"></property>
	</bean>
	
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
	<property name="basePackage" value="com.office.dao"></property>
	<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
	</bean>
	 
	<!-- 业务层提供的事务管理解决方案 -->
	<!-- <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
	   <property name="dataSource" ref="dataSource"></property>
	</bean> -->
	
	<!-- 怎么用这个解决方案，怎么管 -->
	<!-- <tx:advice id="myadice" transaction-manager="transactionManager" >
	    <tx:attributes>
	      <tx:method name="add*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
	      <tx:method name="del*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
	      <tx:method name="edit*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
	    </tx:attributes>
	</tx:advice> -->
	
	<!-- <bean id="logaspect" class="com.office.aop.LogAspect"></bean> -->
<!-- 	<aop:config>
	<aop:pointcut expression="execution(* com.office.service..*(..))" id="mycut" />
	<aop:advisor advice-ref="myadice" pointcut-ref="mycut"/>
	<aop:aspect ref="logaspect">
	  <aop:before method="before" pointcut-ref="mycut"/>
	  <aop:after method="after" pointcut-ref="mycut" />
	  <aop:after-returning method="afterReturn" returning="returnValue" pointcut-ref="mycut"/>
	</aop:aspect>
	</aop:config> -->
	
	
	<!-- <bean id="deptService" class="com.office.service.impl.DeptsServiceImpl"></bean> -->
</beans>